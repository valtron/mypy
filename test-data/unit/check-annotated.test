[case testAnnotated]
from typing import Annotated, ClassVar
from typing_extensions import Final

class C:
    a: Annotated[int, ClassVar]
    b: ClassVar[Foo('a')] # E: Invalid type annotation

a: Annotated[int, 1] = '' # E: Incompatible types in assignment (expression has type "str", variable has type "int")
b: Annotated[int] = 1
c: Annotated[Annotated[int, 1], 2, ClassVar] = 2 # E: ClassVar can only be used for assignments in class body
d: Annotated[str, Final] = ''
d = 'b'                   # E: Cannot assign to final name "d"

class Foo:
    def __init__(self, a):
        self.a = a
e: Annotated[int, Foo('a')] = 1